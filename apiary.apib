FORMAT: 1A
HOST: https://v1-file.api.dudesolutions.io

USECOMMONSDKLIBRARY: TRUE
GENERATEASYNCCODE: TRUE
GENERATEINTERFACES: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: FALSE
USECONTROLLERPOSTFIX: FALSE
USEENUMPOSTFIX: FALSE
USECONSTRUCTORSFORCONFIG: TRUE
CSHARPDEFAULTNAMESPACE: DSI.SDK.File
JAVADEFAULTNAMESPACE: io.dudesolutions.file
BRANDLABEL: Dude Solutions, Inc.
USERAGENT: Dude SDK

# Dude File Api
![Dude Solutions](https://dudesolutions.com/assets/img/logo.png)

## Authentication
*Dude File Api* uses OAuth v2 Authentication. First you create a new (or acquire existing) OAuth v2 token using [DudeAuth](https://www.dudeauth.com/).

New to *OAuth*?  Check out the [OAuth Bible](http://oauthbible.com/) for good reference material.

# Group System Information

## System Information [/]

### GET

+ Response 200 (application/json)
    + Attributes (System Information)

# Group Heartbeat

## Heartbeat [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json)
    + Attributes (Heartbeat)

# Group Files
The file collection allows for file resources to be manipulated and found.

## Detail [/accounts/{accountId}/file/{id}]

+ Parameters
    + id (number, required) - {INT} The file ID for the desired resource.
    + accountId (number, required) - {INT} The account ID the resource belongs to.

### GET

+ Response 200 (application/json)
    + Attributes (File Descriptor)

### PUT

+ Request (application/json)
    + Attributes (File Descriptor)

+ Response 200 (application/json)
    + Attributes (File Descriptor)

### DELETE

+ Response 204

## Upload [/accounts/{accountId}/file/upload]

+ Parameters
    + accountId (number, required) - {INT} The account ID for the upload to be associated with.

### Upload [POST]

+ Request (application/json)
    + Attributes (File Descriptor Create)

+ Response 201 (application/json)
    + Attributes (File Descriptor)

## Download [/accounts/{accountId}/file/{id}/download]

+ Parameters
    + accountId (number, required) - {INT} The account ID the resource belongs to.
    + id (number, required) - {INT} The file ID for the desired resource.

### Download [GET]

+ Response 200 (application/json)

## Public Download [/file/public/{token}]

+ Parameters
    + token (string, required) - A pre-generated and self-encapsulated token to access a specific file resource.

### Download [GET]

+ Response 200 (application/json)

# Data Structures

## System Information (object)
+ `application`: `Dude File Api` (string, required) - The name of the application.
+ `version` : `1.0.0.0` (string, required) - The assembly version.
+ `apiVersion` : `1.0.0.0` (string, required) - The API version.
+ `vitals` (Heartbeat, required) - The state of the system dependencies.
+ `links` (array[System Links], required) - The API routes.

## System Links (object)
+ `endpoint` : `WorkOrder` (string, required) - The name of the endpoint.
+ `action` : `Get` (string, required) - The REST action.
+ `route` : `/accounts/{accountId}/workorders` (string, required) - The route to the endpoint.

## File Descriptor (File Descriptor Create)
Represents a file resource.

### Properties
+ `id` (number, required) - {INT} The unique ID for the file resource.

## File Descriptor Create(object)
Represents a file resource.

### Properties
+ `filename` (string, required) - The display filename for the file resource.
+ `size` (number, required) - {INT} The size (in bytes) for the file resource.
+ `mime` (string, required) - The MIME type for the file resource.
+ `fileState` (enum, required) - The state or status or the file resource.
    + `StorageRequestReceived`
    + `VirusScanPending`
    + `Uploaded`
    + `Preprocessed`
    + `Errored`
+ `fileType` (enum, required) - The type of file resource.
    + `System`
    + `User`
+ `downloadUri` (string, required) - The URI that can be used to download the file securely.
+ `shareableUri` (string, required) - The URI that can be used to access the file without logging in.
+ `createdByUser` (User, required) - The user who created the file resource.
+ `createdDateTime` (string, optional) - The UTC date and time the file resource was created.
+ `updatedByUser` (User, required) - The user who last updated the file resource.
+ `updatedDateTime` (string, optional) - The UTC date and time the file resource was last updated.

## User (object)
Represents a user.

### Properties
+ `id` (number, required) - {INT} The unique ID that represents the user.
+ `firstName` (string, required) - The first name of the user.
+ `lastName` (string, required) - The last name of the user.
+ `email` (string, required) - The email of the user.

## Heartbeat (object)
Represents a heartbeat response.

### Properties
+ `cachevitalcheck`: true (boolean, required) - Vital check to ensure Cache provider is online.
+ `filestoragevitalcheck`: true (boolean, required) - Vital check to ensure file storage provider is online.
+ `filedbvitalcheck`: true (boolean, required) - Vital check to ensure database provider is online.
+ `symantecantivirusprovidervitalcheck`: true (boolean, required) - Vital check to ensure malware provider is online.
